Question: 
If you create a constructor method to build a DVD by title then create a constructor method to build 
a DVD by category. Does JAVA allow you to do this?
Answer: No, Java does not allow you to create two constructor methods that only differ by the names of their parameters 
(e.g., one for title and another for category) because constructor overloading in Java requires that
 each overloaded constructor must have a unique parameter list . The parameter list is distinguished by:

The number of parameters , or
The types of parameters , or
The order of parameter types .

Question: Try to add a method addDigitalVideoDisc which allows to pass an arbitrary number of 
arguments for dvd. Compared to an array parameter. What do you prefer in this case?

Answer: Use varargs for addDigitalVideoDisc() because it:

Simplifies method calls.

Supports both individual DVDs and arrays.

Improves code readability.

This aligns with Java best practices (e.g., String.format() or List.of() use varargs)

Question: 
● After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two 
objects still remain? 
Answer: 
Java is pass-by-value , so the references to jungleDVD and cinderellaDVD are copied when passed to the swap method. 
Swapping the copies inside the method does not affect the original references in the main method. Hence, the titles remain unchanged.

● After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is 
the title of the JungleDVD changed?

Answer: 
The changeTitle method modifies the internal state (title) of the jungleDVD object through its copied reference. 
Since both the original and copied references point to the same object, the change is reflected in the original object.


